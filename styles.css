/* Modern CSS Reset and Variables */
:root {
    --primary-color: #2196f3;
    --primary-dark: #1976d2;
    --success-color: #4caf50;
    --warning-color: #ffc107;
    --danger-color: #f44336;
    --background-color: #f4f6f8;
    --column-bg: #ebecf0;
    --text-primary: #172b4d;
    --text-secondary: #5e6c84;
    --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
    --transition-speed: 0.3s;
    --border-radius: 8px;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
}

/* Scrollbar Styling */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: var(--column-bg);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb {
    background: #bfc4ce;
    border-radius: 4px;
    transition: background var(--transition-speed);
}

::-webkit-scrollbar-thumb:hover {
    background: #a5aab4;
}

/* Body and Container Styles */
body {
    background: linear-gradient(135deg, #f4f6f8 0%, #e9ecef 100%);
    min-height: 100vh;
    padding: 2rem;
    color: var(--text-primary);
    line-height: 1.5;
}

/* Header Styles */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding: 1rem;
    background: white;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-sm);
}

.header h1 {
    background: linear-gradient(120deg, var(--primary-color), var(--primary-dark));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    font-size: 2rem;
    font-weight: 600;
}

.add-task-btn {
    padding: 0.75rem 1.5rem;
    background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
    color: white;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: transform var(--transition-speed), box-shadow var(--transition-speed);
}

.add-task-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.add-task-btn:active {
    transform: translateY(0);
}

/* Kanban Board Layout */
.kanban-board {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    min-height: calc(100vh - 180px);
    padding: 1rem;
}

/* Column Styles */
.column {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border-radius: var(--border-radius);
    padding: 1.5rem;
    box-shadow: var(--shadow-sm);
    display: flex;
    flex-direction: column;
    transition: box-shadow var(--transition-speed);
}

.column:hover {
    box-shadow: var(--shadow-md);
}

.column h2 {
    margin-bottom: 1.5rem;
    color: var(--text-primary);
    font-size: 1.25rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.task-container {
    flex: 1;
    min-height: 100px;
    overflow-y: auto;
    padding: 0.5rem;
}

/* Task Card Styles */
.task {
    background: white;
    padding: 1.25rem;
    border-radius: var(--border-radius);
    margin-bottom: 1rem;
    box-shadow: var(--shadow-sm);
    cursor: move;
    position: relative;
    transition: all var(--transition-speed);
    border: 2px solid transparent;
}

.task:hover {
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
}

.task h3 {
    margin-bottom: 0.75rem;
    color: var(--text-primary);
    font-weight: 600;
}

.task p {
    color: var(--text-secondary);
    font-size: 0.9rem;
    line-height: 1.5;
    margin-bottom: 1rem;
}

.task .color-label {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 4px;
    border-radius: var(--border-radius) var(--border-radius) 0 0;
    transition: height var(--transition-speed);
}

.task:hover .color-label {
    height: 6px;
}

/* Color Label Styles */
.color-label.red { 
    background: linear-gradient(to right, #f44336, #d32f2f);
}
.color-label.green { 
    background: linear-gradient(to right, #4caf50, #388e3c);
}
.color-label.blue { 
    background: linear-gradient(to right, #2196f3, #1976d2);
}
.color-label.yellow { 
    background: linear-gradient(to right, #ffc107, #ffa000);
}

/* Task Actions */
.task-actions {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    opacity: 0;
    transform: translateY(10px);
    transition: all var(--transition-speed);
}

.task:hover .task-actions {
    opacity: 1;
    transform: translateY(0);
}

.task-actions button {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 500;
    transition: all var(--transition-speed);
    flex: 1;
}

.task-actions .edit-btn {
    background: var(--primary-color);
    color: white;
}

.task-actions .edit-btn:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
}

.task-actions .delete-btn {
    background: var(--danger-color);
    color: white;
}

.task-actions .delete-btn:hover {
    background: #d32f2f;
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
}

/* Modal Styles */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0);
    backdrop-filter: blur(0px);
    z-index: 1000;
    opacity: 0;
    transition: background-color var(--transition-speed), 
                backdrop-filter var(--transition-speed),
                opacity var(--transition-speed);
}

.modal.active {
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    opacity: 1;
}

.modal-content {
    position: relative;
    background: white;
    margin: 5% auto;
    padding: 2rem;
    width: 90%;
    max-width: 600px;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-lg);
    transform: translateY(-20px);
    opacity: 0;
    transition: transform var(--transition-speed),
                opacity var(--transition-speed);
}

.modal.active .modal-content {
    transform: translateY(0);
    opacity: 1;
}

.modal h2 {
    margin-bottom: 1.5rem;
    color: var(--text-primary);
    font-size: 1.5rem;
    font-weight: 600;
}

/* Form Styles */
.form-group {
    position: relative;
    margin-bottom: 1.5rem;
}

#taskForm input,
#taskForm textarea {
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid var(--column-bg);
    border-radius: var(--border-radius);
    font-size: 1rem;
    transition: all var(--transition-speed);
    background-color: white;
}

#taskForm input:focus,
#taskForm textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.1);
}

#taskForm input.error,
#taskForm textarea.error {
    border-color: var(--danger-color);
    background-color: rgba(244, 67, 54, 0.02);
}

#taskForm input.error:focus,
#taskForm textarea.error:focus {
    box-shadow: 0 0 0 3px rgba(244, 67, 54, 0.1);
}

.error-message {
    position: absolute;
    left: 0;
    bottom: -20px;
    font-size: 0.85rem;
    color: var(--danger-color);
    opacity: 0;
    transform: translateY(-5px);
    transition: all var(--transition-speed);
    pointer-events: none;
}

.error-message.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Error shake animation */
@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

.shake {
    animation: shake 0.4s ease-in-out;
}

/* Color Label Selection */
.color-labels {
    margin-bottom: 1.5rem;
    padding: 1rem;
    background: var(--column-bg);
    border-radius: var(--border-radius);
}

.color-labels h3 {
    margin-bottom: 1rem;
    font-size: 1rem;
    color: var(--text-primary);
    font-weight: 500;
}

.label-options {
    display: flex;
    gap: 1.5rem;
    flex-wrap: wrap;
    padding: 0.5rem;
}

.color-label {
    position: relative;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
}

.color-label:after {
    content: attr(data-color);
    font-size: 0.8rem;
    color: var(--text-secondary);
    text-transform: capitalize;
    transition: color var(--transition-speed);
}

.color-label input[type="radio"] {
    display: none;
}

.label-display {
    width: 50px;
    height: 50px;
    border-radius: 12px;
    cursor: pointer;
    border: 3px solid transparent;
    transition: all var(--transition-speed);
    position: relative;
    box-shadow: var(--shadow-sm);
}

.label-display:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.label-display.red { 
    background: linear-gradient(135deg, #ff4d4d, #f44336);
}
.label-display.green { 
    background: linear-gradient(135deg, #4CAF50, #388E3C);
}
.label-display.blue { 
    background: linear-gradient(135deg, #2196F3, #1976D2);
}
.label-display.yellow { 
    background: linear-gradient(135deg, #FFC107, #FFA000);
}

.color-label input[type="radio"]:checked + .label-display {
    border-color: white;
    box-shadow: var(--shadow-md),
                0 0 0 2px var(--primary-color);
    transform: translateY(-2px);
}

.color-label input[type="radio"]:checked + .label-display::after {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 1.5rem;
    font-weight: bold;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.color-label input[type="radio"]:checked ~ .label-name {
    color: var(--text-primary);
    font-weight: 500;
}

/* Add hover effects for the entire label area */
.color-label:hover .label-display {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
}

.color-label:hover:after {
    color: var(--text-primary);
}

/* Modal Buttons */
.modal-buttons {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    margin-top: 2rem;
}

.modal-buttons button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: all var(--transition-speed);
}

.modal-buttons button[type="submit"] {
    background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
    color: white;
}

.modal-buttons button[type="button"] {
    background: var(--column-bg);
    color: var(--text-primary);
}

.modal-buttons button:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
}

/* Drag and Drop Styles */
.task.dragging {
    opacity: 0.5;
    transform: scale(1.05);
    box-shadow: var(--shadow-lg);
}

.column.drag-over {
    background: rgba(255, 255, 255, 0.95);
    box-shadow: var(--shadow-lg);
    border: 2px dashed var(--primary-color);
}

/* Responsive Design */
@media (max-width: 768px) {
    body {
        padding: 1rem;
    }

    .kanban-board {
        grid-template-columns: 1fr;
        gap: 1rem;
    }

    .header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }

    .modal-content {
        margin: 10% 1rem;
        padding: 1.5rem;
    }
}

/* Animations */
@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.task {
    animation: slideIn 0.3s ease-out;
    transition: all var(--transition-speed);
}

/* Loading State */
.task.loading {
    position: relative;
    overflow: hidden;
}

.task.loading::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.6) 50%,
        rgba(255, 255, 255, 0) 100%
    );
    animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

/* Confirmation Modal Styles */
.confirm-modal .modal-content {
    max-width: 400px;
    text-align: center;
    padding: 2rem;
}

.confirm-modal h2 {
    color: var(--danger-color);
    font-size: 1.5rem;
    margin-bottom: 1rem;
}

.confirm-modal p {
    color: var(--text-secondary);
    margin-bottom: 1rem;
    line-height: 1.5;
}

.confirm-modal .task-preview {
    background: var(--column-bg);
    padding: 1rem;
    border-radius: var(--border-radius);
    margin: 1rem 0;
    color: var(--text-primary);
    font-weight: 500;
    word-break: break-word;
}

.confirm-modal .modal-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin-top: 1.5rem;
}

.confirm-modal .delete-btn,
.confirm-modal .cancel-btn {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: var(--border-radius);
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all var(--transition-speed);
    min-width: 120px;
}

.confirm-modal .delete-btn {
    background: var(--danger-color);
    color: white;
}

.confirm-modal .delete-btn:hover {
    background: #d32f2f;
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
}

.confirm-modal .cancel-btn {
    background: var(--column-bg);
    color: var(--text-primary);
}

.confirm-modal .cancel-btn:hover {
    background: #e0e0e0;
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
}

/* Animation for confirmation modal */
.confirm-modal.active .modal-content {
    animation: confirmSlideIn 0.3s ease-out forwards;
}

@keyframes confirmSlideIn {
    from {
        transform: translateY(20px) scale(0.95);
        opacity: 0;
    }
    to {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
} 